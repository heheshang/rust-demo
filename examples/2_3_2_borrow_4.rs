// 借用
/*
    数据竞争会导致未定义行为，这种行为很可能超出我们的预期，难以在运行时追踪，并且难以诊断和修复。
    而 Rust 避免了这种情况的发生，因为它甚至不会编译存在数据竞争的代码！

    很多时候，大括号可以帮我们解决一些编译不通过的问题，通过手动限制变量的作用域：

*/
fn main() {
    let mut s = String::from("hello");
    {
        let r1 = &mut s;
        println!("{}", r1);
    } // r1 在这里离开了作用域，所以我们完全可以创建一个新的引用
    let r2 = &mut s;
    println!("{}", r2);
}
